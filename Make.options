# vim: ft=make tw=78 ts=4 sw=4 noet

# (quasi)-standard Unix tools
CAT := cat
CP := cp
CURL := curl
CURL_FLAGS := -s -L
DATE := date
DIFF := diff
DIFF_FLAGS := -u
ECHO := /bin/echo
GIT := git
GREP := grep
KILLALL := killall
KILLALL_FORCE := killall -9
MKDIR := mkdir
MKTEMP := mktemp
MMC := mmc
MV := mv
RM := /bin/rm
# GNU sed is required
SED := sed -r
SLEEP := sleep
SORT := /bin/sort

# composed common variables
CC       := $(shell $(MMC) --output-cc)
# if you change CC on the command line you have to change CC_TYPE as well
OBJ_EXT  := $(shell $(MMC) --output-cc-type | sed -r -n -e "s/([^_]+).*/\1/p")
CC_TYPE  := $(shell $(MMC) --output-cc-type)
DEL_DIR  := $(RM) -fR
DEL_FILE := $(RM) -f
# If all you want is to look for a string in a stream,
# use FINDSTR, since that works on Windows as well
FINDSTR  := $(GREP)
INSTALL  := $(CP)
INSTALL_COMPARE := $(INSTALL) -u
HARDLINK := $(CP) -u -f -l

# Extensions
EXE_EXT :=
ifeq ($(CC_TYPE),msvc)
    OBJ_EXT := .obj
else
    OBJ_EXT := .o
endif

# Windows specific overrides
ifdef WINDIR
    # The expected outputs do not use CRLF line endings,
    # so if we are on Windows we need to account for this.
    DIFF_FLAGS += --strip-trailing-cr
    EXE_EXT := .exe
    FINDSTR := findstr
    KILLALL := taskkill -t -im
    KILLALL_FORCE := taskkill -F  -im
    ifdef ANSICON_DEF
        COLORTERM := win32-ansicon
    endif
    ifeq (ConEmuANSI,ON)
        COLORTERM := win32-conemu
    endif
endif

# end of public variable block
#----------------------------------------------------------------------------#

# Makefile self-test, use SELF_TEST=skip-self-test to skip self-testing
SELF_TEST := self-test
# use CONTINUE_FAILED_TESTS=true to continue after a failed test
CONTINUE_FAILED_TESTS := false

# ANSI_COLOURISE(Colour,Attribute,Text)
ANSI_COLOURISE   = \\033[$(1)\;$(2)m$(3)\\033[39\;22m
# ANSI_JUMP_COLUMN(Column)
ANSI_JUMP_COLUMN = \\033[$(1)G
TEST_OK := "[succeeded]"
TEST_NO := "[failed]"
ifdef COLORTERM
    TEST_JMP := $(call ANSI_JUMP_COLUMN,6)
    TEST_OK := -e $(TEST_JMP)$(call ANSI_COLOURISE,32,1,"success")
    TEST_NO := -e $(TEST_JMP)$(call ANSI_COLOURISE,31,1,"failure")
endif

# TEST_*(Variable,Actual,Expected)
TEST_PREFIX = echo -n "TEST whether $(1)=$($(1)) is $(2) "
TEST_RES  = echo $(TEST_OK) || (echo $(TEST_NO) && \
    $(CONTINUE_FAILED_TESTS))

TEST_VER = $(TEST_PREFIX) && \
    $($1) --version 2>/dev/null | $(FINDSTR) $(2) >/dev/null && \
	$(TEST_RES)

TEST_CC = $(TEST_PREFIX) && \
    F=`$(MKTEMP) $(CC)_obj_ext_XXXXXXXXX`; \
        ($(MV) "$$F" "$$F.c" && $(CC) -c "$$F.c" >/dev/null 2>&1) ;\
        $(RM) "$$F.c" && $(RM) "$$F$($(1))"  && \
        $(TEST_RES)

TEST_GNU := CAT CP DATE DIFF ECHO GREP INSTALL MAKE MV RM SED SORT SLEEP

.PHONY: self-test
self-test:
	@$(call TEST_VER,MMC,Mercury)
	@$(foreach VAR,$(TEST_GNU),( $(call TEST_VER,$(VAR),GNU) ) && ) true
	@$(call TEST_VER,MKTEMP,"mktemp")
	@$(call TEST_VER,CURL,"libcurl")
	@$(call TEST_VER,GIT,"git version")
	@$(call TEST_CC,OBJ_EXT,"$(CC)\'s object extension")

.PHONY: skip-self-test
skip-self-test:
