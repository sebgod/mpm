%----------------------------------------------------------------------------%
% vim: ft=mercury ff=unix ts=4 sw=4 et
% WARNING: This file is automatically generated, please do not modify.
% File: <MODULE>.meta_info.m
% Created on: <TIMESTAMP>
%----------------------------------------------------------------------------%

:- module <MODULE>.meta_info.

:- interface.

%----------------------------------------------------------------------------%

:- import_module pair.

    % author(Name-Email):
    %
    % `Name' is the principal author of this package,
    % whereas `Email' is the authors address for support or remarks,
    % this will usually be the `git' or similar information during development
    % time, but could also be organisational information.
    %
:- pred author(pair(string)::out) is det.

    % revision(Short, Long):
    %
    % `Short' is usually a revision number or short `git' SHA-1 hash.
    % `Long' is a more descriptive name, e.g. from `git describe'.
    %
:- pred revision(string::out, string::out) is det.

    % version(Version):
    %
    % `Version' is a 'semver' (http://semver.org) formatted version string
    % which will be used for dependency resolution.
    %
:- pred version(string::out) is det.

    % src_dir(Dir):
    %
    % `Dir' is the directory where the package's source code resides,
    % this will be ``src'' by default.
    %
:- pred src_dir(string::out) is det.

%----------------------------------------------------------------------------%

:- implementation.

author("<AUTHOR_NAME>"-"<AUTHOR_EMAIL>").

revision("<REVISION_SHORT>", "<REVISION_LONG>").

version("<VERSION>").

src_dir("<SRC_DIR>").

:- pred contrib(pair(string)::out) is multi.

contrib(""-""). % these are dummies to suppress a determinism warning.
contrib(""-""). % two dummy entries ensures that `contrib'/1 is `multi'.

:- pred dep(string::out) is multi.

dep(""). % these are dummies to suppress a determinism warning.
dep(""). % two dummy entries ensures that `dep'/1 is `multi'.

%----------------------------------------------------------------------------%
% NOTE: No `:- end_module' directive at 'EOF', since the build process will
% append possible `dep'/1 clauses and others here.
%----------------------------------------------------------------------------%

