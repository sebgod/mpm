# vim: ft=make ts=4 sw=4 ff=unix noet
# do not use CC for executables (see rule %: %.meta_info.m)
.SUFFIXES:

VER_RE := ([0-9]+)[.]([0-9]+)[.]([0-9]+)([-][0-9a-zA-Z_]+)?([+][0-9a-zA-Z_]+)?
PKG_TUPLE_VER_RE := "s/^version[(]\"$(VER_RE)\"[)].+/ \
-e s\/<version>\/{\1,\2,\3,\"\4\",\"\5\"}\/i/p"
PKG_DIST_VER_RE  := "s/^version[(]\"$(VER_RE)\"[)].+/\1.\2.\3\4/p"
PKG_LIBNAME_DEPS_RE := "s/^dep[(]\"lib([^\"]+)[\"].+/\1/p"
PKG_NAME_VER_RE := dep[(]\"lib([^\"]+)[\"]\s*,\s*\"([^\"]+)\"
PKG_LIBVER_DEPS_RE  := "s/^$(PKG_NAME_VER_RE).+/lib\1\/\2/p"

PKG_MULTI    := contrib
PKG_MULTI_RE := "s/^($(PKG_MULTI))[(]([^)]+)[)].+/-e s\/<\1s>\/\2\|[<\1s>]\/i/p"

PKG_DEPS_RE := "s/^$(PKG_NAME_VER_RE).+/-e s\/<DEPS>\/{\"lib\1\",\"\2\",<NL>univ(\1.meta_info.package)}|<NL>[<DEPS>]\/i/p"

PKG_VARS    := src_dir
PKG_VARS_RE := "s/($(PKG_VARS))[(]\"([^\"]+)[\"][)].+/-e s\/<\1>\/\2\/i/p"

AUTHOR_NAME  := $(GIT_AUTHOR_NAME)
ifndef AUTHOR_NAME
    AUTHOR_NAME := $(shell $(GIT) config --get user.name)
endif

AUTHOR_EMAIL := $(GIT_AUTHOR_EMAIL)
ifndef AUTHOR_EMAIL
    AUTHOR_EMAIL := $(shell $(GIT) config --get user.email)
endif

GIT_REVISION_SHORT := $(shell $(GIT) rev-parse --short HEAD 2>/dev/null)
GIT_REVISION_LONG  := $(shell $(GIT) describe --tags 2>/dev/null || \
	$(GIT) rev-parse HEAD)
REVISION_SHORT := $(GIT_REVISION_SHORT)
REVISION_LONG  := $(GIT_REVISION_LONG)
TIMESTAMP      := $(shell $(DATE))

# common sub-expressions for variable creation
LIBNAME_DEPS_SH = $(SED) -n -e $(PKG_LIBNAME_DEPS_RE) $<
LIBVER_DEPS_SH  = $(SED) -n -e $(PKG_LIBVER_DEPS_RE)  $<
PKG_DIST_VER_SH = $(SED) -n -e $(PKG_DIST_VER_RE)     $<

lib%.dep_vars: $(PKG_ROOT)/lib%.package
	@echo VARS $*: $^
	@$(eval lib$*_LIBNAME_DEPS := $(shell $(LIBNAME_DEPS_SH)))
	@$(eval lib$*_LIBVER_DEPS := $(shell $(LIBVER_DEPS_SH)))
	@$(eval lib$*_INSTALL_DIR := \
		$(MPM_PKG_DIR)/lib$*/$(shell $(PKG_DIST_VER_SH)))

%.dep_vars: $(PKG_ROOT)/%.package
	@echo VARS $*: $^
	@$(eval $*_LIBNAME_DEPS := $(shell $(LIBNAME_DEPS_SH)))
	@$(eval $*_LIBVER_DEPS :=$(shell $(LIBVER_DEPS_SH)))

# Build the local version of the library if provided by this package.
# This is ensured by the meta_info.m rules, which depends on lib%.package
lib%: lib%.dep_vars %.meta_info.m Mercury.modules
	@echo MMC --install-prefix="$(lib$*_INSTALL_DIR)" --make lib$*.install
	@$(MMC) --install-prefix="$(lib$*_INSTALL_DIR)" --make lib$*.install

Mercury.modules: $(wildcard *.m)
	@echo "MMC -f $^"
	@$(MMC) -f $^

# generating meta_info.m for package information available at compile time
.PRECIOUS: %.meta_info.m
MI_TMPL_SED = $(SED)                                 \
    `$(SED) -n -e $(PKG_TUPLE_VER_RE) $<`            \
    `$(SED) -n -e $(PKG_MULTI_RE)     $<`            \
    `$(SED) -n -e $(PKG_DEPS_RE)      $<`            \
    -e "s/<MODULE>/$*/g"                             \
    -e "s/<AUTHOR_NAME>/$(AUTHOR_NAME)/"             \
    -e "s/<AUTHOR_EMAIL>/$(AUTHOR_EMAIL)/"           \
    -e "s/<REVISION_SHORT>/$(REVISION_SHORT)/"       \
    -e "s/<REVISION_LONG>/$(REVISION_LONG)/"         \
    -e "s/<TIMESTAMP>/$(TIMESTAMP)/"                 \
    -e "s/<SRC_DIR>/src/"                            \
    -e "s/<($(PKG_MULTI))s>//i"                      \
    -e "s/<DEPS>//i"                                 \
    -e "s/<NL>/\n    /ig"

MI_TMPL_OUT = <$(MI_TMPL) >$@
MI_TMPL_IMP = :- use_module $(DEP).meta_info.\n

%.meta_info.m: $(PKG_ROOT)/lib%.package lib%.dep_vars $(MI_TMPL)
	@echo GEN $*.meta_info.m \(library\)
	$(shell $(MI_TMPL_SED) \
		-e "s/%IMPORTS/$(foreach DEP,$(lib$*_LIBNAME_DEPS),$(MI_TMPL_IMP))/" \
		$(MI_TMPL_OUT))

%.meta_info.m: $(PKG_ROOT)/%.package %.dep_vars $(MI_TMPL)
	@echo GEN $*.meta_info.m \(executable\)
	$(shell $(MI_TMPL_SED) \
		-e "s/%IMPORTS/$(foreach DEP,$($*_LIBNAME_DEPS),$(MI_TMPL_IMP))/" \
		$(MI_TMPL_OUT))

# XXX: This rule comes last since it might be a (unwanted) catch-call rule
# XXX: The dependency analysis used in this rule is temporary, and
# SHOULD be done by mpm, e.g. %$(EXE_EXT): $(%_DEPS) ...
%$(EXE_EXT): %.dep_vars %.meta_info.m Mercury.modules
	@echo MMC --make $* deps: $($*_LIBVER_DEPS)
	@$(MMC) --make $* \
		$(foreach DEP,$($*_LIBVER_DEPS),\
			--mld "$(MPM_PKG_DIR)/$(DEP)/lib/mercury") \
		$(foreach LIB,$($*_LIBNAME_DEPS),--ml $(LIB))
